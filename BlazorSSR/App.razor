@using Fluxor.Persist.Middleware
@inject IActionSubscriber ActionSubscriber

@if (IsLoading)
{
    <SplashScreen></SplashScreen>
}
<Fluxor.Blazor.Web.StoreInitializer/>
<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code
{
    private bool IsLoading { get; set; } = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ActionSubscriber.SubscribeToAction<InitializePersistMiddlewareResultSuccessAction>(this, async result =>
        {
            IsLoading = false;

    // we now have state, we can re-render to reflect binding changes
            await InvokeAsync(StateHasChanged);
        });
    }

    protected override async Task OnInitializedAsync()
    {
    // Console.WriteLine("Initializing store");
    // await Store.InitializeAsync();
        await base.OnInitializedAsync();
    }

}