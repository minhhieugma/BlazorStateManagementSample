@using Fluxor.Persist.Storage.Store.Action
@inherits Fluxor.Persist.Storage.BaseComponent


<MobileLayout
    LayoutTitle="Add Comment"
    ShowFooter="false"
    ShowRightButton="false"
    LeftButtonTitle="Back">


    <div class="mb-3">
        <label for="exampleFormControlTextarea1" class="form-label">Comment</label>
        <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"
               @bind:get="@Comment"
               @bind:set="SetAsync"
               @bind:event="oninput" ></textarea>
    </div>
    <div class="mb-3">
        <button class="btn btn-primary" @onclick="AddComment">Add</button>
    </div>
</MobileLayout>


@code
{
    [Parameter]
    public string? Comment { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ActionSubscriber.SubscribeToAction<ButtonClickedAction>(this, action => { Dispatcher.Dispatch(new BackStageAction()); });
    }

    private Task SetAsync(string value)
    {
        Comment = value;
        UpdateCurrentStage();

        return Task.CompletedTask;
    }

    private void UpdateCurrentStage()
    {
        Dispatcher.Dispatch(new UpdateTrailAction
        {
            Trail =
            {
                Type = typeof(CommentCreationModal),
                ComponentParameters = new Dictionary<string, object> { { nameof(Comment), Comment ?? "" } }
            }
        });
    }

    private void AddComment()
    {
        Dispatcher.Dispatch(new BackStageAction { });
    }
}